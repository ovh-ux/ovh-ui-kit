@import (reference) '~@ovh/ui-kit.checkbox/src/less/_mixins';
@import (reference) '~@ovh/ui-kit.input/src/less/_mixins';
@import (reference) '~@ovh/ui-kit.core/src/less/_responsive';
@import (reference) '~@ovh/ui-kit.select/src/less/_mixins';
@import (reference) '~@ovh/ui-kit.switch/src/less/_mixins';
@import (reference) '~@ovh/ui-kit.textarea/src/less/_mixins';
@import (reference) './_variables';

#oui {
  .field-base(
    @selector,
    @button-selector,
    @label-selector,
    @input-group-selector,
    @checkbox-selector,
    @select-selector,
    @ui-select-selector,
    @switch-selector,
    @textarea-selector,
    @custom-component-selector,
    @icon-error-selector: @oui-field-error-icon-selector,
    @form-controls: @oui-global-base-form-controls
  ) {
    display: flex;
    flex-direction: column;
    margin-bottom: @oui-field-spacing;

    .@{label-selector} {
      font-size: @oui-field-label-font-size;

      &_focus {
        color: @oui-field-label-default-font-color;
      }
    }

    &__label-container {
      .@{label-selector} {
        display: inline-block;
      }
    }

    &__content {
      display: flex;
      align-items: center;

      .tablet({
        display: block;
      });
    }

    &__control {
      width: @oui-field-control-default-size;
      margin-bottom: @oui-field-control-spacing;
      .field-sizes();

      // Native form controls
      .controls(@index: length(@form-controls)) when(@index > 0) {
        .controls(@index - 1);
        @control: extract(@form-controls, @index);

        > @{control} {
          margin-bottom: 0;
        }
      }
      .controls();

      // Specific cases
      > oui-numeric > .@{input-group-selector},
      > oui-select > .@{ui-select-selector},
      > oui-switch > .@{switch-selector}__label-container {
        margin-bottom: 0;
      }
    }

    &__helper {
      color: @oui-field-helper-color;
      font-size: @oui-field-helper-font-size;
      text-align: justify;

      &_top {
        align-self: flex-start;
      }

      .tablet({
        margin-left: 0;
      });
    }

    &__error {
      display: none;
      color: @oui-field-error-color;
      font-size: @oui-field-error-font-size;
      text-align: justify;

      .@{oui-field-error-icon-selector} {
        color: @oui-field-error-icon-color;
        font-size: @oui-field-error-icon-font-size;
        vertical-align: sub;
      }
    }

    &_error {
      .@{selector}__error {
        display: block;
      }

      .oui-input {
        #oui > .input-error-style();
      }

      .@{checkbox-selector},
      .@{checkbox-selector}:hover {
        #oui > .checkbox-error-style();
      }

      .@{select-selector} {
        #oui > .select-error-style();
      }

      .@{switch-selector} {
        #oui > .switch-error-style();
      }

      .@{textarea-selector} {
        background-color: pink;
        #oui > .textarea-error-style(@textarea-selector);
      }
    }
  }

  .field-sizes() {
    .make-control-sizes(@i: 1) when (@i <= length(@oui-field-control-sizes)) {
      .make-control-sizes(@i + 1);
      @pair: extract(@oui-field-control-sizes, @i);
      @key: extract(@pair, 1);
      @value: extract(@pair, 2);

      &_@{key},
      &_@{i} {
        width: @value;
        min-width: @value;
      }
    }

    .make-control-phone-sizes(@i: 1) when (@i <= length(@oui-field-control-phone-sizes)) {
      .make-control-phone-sizes(@i + 1);
      @pair: extract(@oui-field-control-phone-sizes, @i);
      @key: extract(@pair, 1);
      @value: extract(@pair, 2);

      &_@{key},
      &_@{i} {
        width: auto;
        min-width: 0;
        max-width: @value;
      }
    }

    .make-control-sizes();

    @media screen and (max-width: (@oui-responsive-breakpoint-phone - 1)) {
      .make-control-phone-sizes();
    }
  }
}
