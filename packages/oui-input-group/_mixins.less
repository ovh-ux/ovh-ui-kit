@import '../oui-field/_mixins';
@import '../oui-input/_mixins';
@import './_variables';

#oui {
  .input-group-base(
    @input-selector,
    @button-selector,
    @button-background-color: @oui-input-group-button-hollow-background-color,
    @button-border-color_disabled: @oui-input-group-button-hollow-border-color_disabled,
    @button-padding: @oui-input-group-button-hollow-padding
  ) {
    #oui > .field-sizes();

    display: table;
    display: flex;
    align-content: stretch;
    align-items: flex-end;
    vertical-align: top;
    width: 100%;
    max-width: 100%;
    margin: 0 0 1.25rem;

    & > .@{button-selector},
    & > .@{input-selector} {
      display: table-cell;
      border-radius: 0;
      margin: 0;

      &:first-child {
        border-radius: @oui-global-base-radius 0 0 @oui-global-base-radius;
      }

      &:last-child {
        border-radius: 0 @oui-global-base-radius @oui-global-base-radius 0;
      }
    }

    & > .@{input-selector} {
      z-index: 1; // Set border priority on inputs
    }

    & > .@{button-selector} {
      #oui > .button-hollow(
        @background-color: @button-background-color,
        @border-color_disabled: @button-border-color_disabled,
        @padding: @button-padding
      );
    }

    & > .@{button-selector}:not(.@{button-selector}_primary):not(.@{button-selector}_secondary) {
      & + .@{button-selector}:not(.@{button-selector}_primary):not(.@{button-selector}_secondary),
      & + .@{input-selector} {
        margin-left: -1px;
      }
    }

    & > .@{input-selector} {
      flex: 2 1 auto;

      &_number {
        -moz-appearance: textfield;

        &::-webkit-outer-spin-button,
        &::-webkit-inner-spin-button {
          -webkit-appearance: none;
          margin: 0;
        }
      }

      & + .@{input-selector},
      & + .@{button-selector}:not(.@{button-selector}_primary):not(.@{button-selector}_secondary) {
        border-left: 0;
      }
    }

    .@{input-selector}-formfield {
      flex: 2 1 auto;
      width: 100%;
      margin-bottom: 0;

      .@{input-selector} {
        border-radius: @oui-global-base-radius 0 0 @oui-global-base-radius;
        margin-bottom: 0;
      }

      + .@{button-selector}:not(.@{button-selector}_primary):not(.@{button-selector}_secondary) {
        border-left: 0;
        margin: 0;
      }
    }
  }

  .input-group-button(
    @input-selector,
    @button-selector,
    @icon-selector,
    @button-min-width: @oui-input-group-button-min-width,
    @button-color_hover: @oui-input-group-button-color_hover
  ) {
    position: relative;

    .@{input-selector} {
      &,
      &:first-child {
        padding-right: @button-min-width;
        border-radius: @oui-global-base-radius;
      }
    }

    .@{button-selector} {
      &,
      &:hover,
      &:focus {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        min-width: @button-min-width;
        width: auto;
        border-color: transparent;
        background: transparent;
        box-shadow: none;
        z-index: 2; // Avoid to be hidden by inputs
      }
    }

    .@{icon-selector} {
      color: @oui-color-silver;
      font-size: 1.25rem;
      vertical-align: middle;
    }

    .@{input-selector}:focus ~ .@{button-selector},
    .@{button-selector}:hover {
      .@{icon-selector} {
        color: @button-color_hover;
      }
    }

    .@{button-selector}:focus {
      .@{icon-selector} {
        color: @button-color_hover;
        text-shadow: 0 1px 1px rgba(0, 0, 0, 0.15);
      }
    }
  }

  .input-group-inline() {
    display: inline-flex;
    width: auto;
  }

  .input-group-numeric(
    @icon-selector,
    @input-selector,
    @width: @oui-input-group-numeric-width,
    @icon-size: @oui-input-group-numeric-icon-size
  ) {
    width: @width;
    max-width: @width;

    .@{icon-selector}::before {
      font-size: @icon-size;
    }

    .@{input-selector} {
      text-align: center;
      // Two lines bellow are required by firefox otherwise the max-width
      // defined at root of the mixin isn't applied correctly
      flex-shrink: 1;
      min-width: 1px;
    }
  }

  .input-group-search(
    @input-selector,
    @button-selector,
    @icon-selector,
    @padding-right: @oui-input-group-search-padding-right,
    @button-padding-x: @oui-input-group-search-button-padding-x,
    @reset-right: @oui-input-group-search-reset-right,
    @reset-icon-size: @oui-input-group-search-reset-icon-size,
    @submit-right: @oui-input-group-search-submit-right,
    @submit-icon-size: @oui-input-group-search-submit-icon-size
  ) {
    position: relative;

    .@{input-selector}:first-child {
      padding-right: @padding-right;
      border-radius: @oui-global-base-radius;

      &:disabled {
        color: @oui-color-shuttle;
      }
    }

    .@{button-selector} {
      width: auto;
      min-width: 0;
      display: flex; // For a better vertical centering
      flex-direction: row;
      align-items: center;
      position: absolute;
      top: 0;
      bottom: 0;
      padding: 0 @oui-input-group-search-button-padding-x;
      text-align: center;
      z-index: 2; // Avoid to be hidden by inputs

      &[type="reset"] {
        right: @reset-right;
        font-size: @reset-icon-size;
      }

      &[type="submit"] {
        right: @submit-right;
        font-size: @submit-icon-size;
      }

      &,
      &:hover,
      &:focus {
        color: @oui-color-sapphire;
        border-color: transparent;
        background: transparent;
        box-shadow: none;
      }

      &:disabled {
        color: @oui-color-silver;
        border-color: transparent;
        background: transparent;
        box-shadow: none;
      }
    }

    .@{icon-selector} {
      display: block;
      color: inherit;
      font-size: inherit;
    }
  }
}
