@import './_variables';

#oui {
  // Accessibility
  .visually-hidden() {
    position: absolute;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(0 0 0 0);
    border: 0;
    margin: -1px;
    padding: 0;

    &_focusable:active,
    &_focusable:focus {
      position: static;
      height: auto;
      width: auto;
      margin: 0;
      clip: auto;
      overflow: visible;
    }
  }

  // Animations
  .animate-fast-out-slow-in(@duration: @oui-animation-default-timing) {
    transition-duration: @duration;
    transition-timing-function: @oui-animation-fast-out-slow-in;
  }

  .animate(@duration: @oui-animation-default-timing) {
    transition-duration: @duration;
    transition-timing-function: @oui-animation-default;
  }

  // Forms
  .control-sizes(@selector) {
    .make-control-sizes(@i: 1) when (@i <= length(@oui-form-control-sizes)) {
      .make-control-sizes(@i + 1);
      @pair: extract(@oui-form-control-sizes, @i);
      @key: extract(@pair, 1);
      @value: extract(@pair, 2);

      .@{selector}_@{key},
      .@{selector}_@{i} {
        width: @value;
        min-width: @value;
      }
    }

    .make-control-phone-sizes(@i: 1) when (@i <= length(@oui-form-control-phone-sizes)) {
      .make-control-phone-sizes(@i + 1);
      @pair: extract(@oui-form-control-phone-sizes, @i);
      @key: extract(@pair, 1);
      @value: extract(@pair, 2);

      .@{selector}_@{key},
      .@{selector}_@{i} {
        width: auto;
        min-width: 0;
        max-width: @value;
      }
    }

    .make-control-sizes();

    @media screen and (max-width: (@oui-responsive-breakpoint-phone - 1)) {
      .make-control-phone-sizes();
    }
  }

  // Icons
  .icon(
    @icon-size: @oui-icon-size,
    @icon-color: @oui-icon-color,
    @spacing: @oui-icon-spacing
  ) {
    display: inline-block;
    margin: @spacing;
    padding: 0;
    color: @icon-color;
    font-family: @oui-global-base-font-family-icon;
    font-size: @icon-size;
    line-height: 1;
    font-weight: normal;
    font-style: normal;
  }

  .for(@array)   when (default()) { #oui > .for-impl_(length(@array)); }
  .for-impl_(@i) when (@i > 1) { #oui > .for-impl_((@i - 1)); }
  .for-impl_(@i) when (@i > 0) { .-each(extract(@array, @i)); }

  .define(@name) {
    @content: "oui-icon-index-@{name}";
  }

  .icon-type() {
    #oui > .for(@oui-icon-index); .-each(@index) {
      #oui > .define(@index);

      &.oui-icon-@{index}::before {
        display: block;
        content: @@content;
      }
    }
  }

  .icon-circle(
    @icon-size: @oui-icon-size;
  ) {
    &::before {
      width: @icon-size;
      height: @icon-size;
      border-radius: 50%;
      background: #333;
      color: #fff;
      font-size: ~"calc(@{icon-size} / 2)";
      line-height: 2;
      text-align: center;
    }
  }

  .icon-bicolor(
    @icon-char-color: @oui-icon-char-color;
  ) {
    position: relative;
    z-index: 1;

    &::after {
      content: "";
      display: block;
      width: 90%;
      height: 90%;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      margin: auto;
      background: @icon-char-color;
      border-radius: 50%;
      z-index: -1;
    }

    &.oui-icon-warning_circle::after {
      width: 25%;
      height: 75%;
    }
  }

  // Responsive
  .responsive(@maxWidth; @rules) {
    @media screen and (max-width: (@maxWidth - 1px)) {
      @rules();
    }
  }

  // Responsive - Max width
  .phone(@rules) {
    #oui > .responsive(@oui-responsive-breakpoint-phone, @rules);
  }

  .tablet(@rules) {
    #oui > .responsive(@oui-responsive-breakpoint-tablet, @rules);
  }

  .medium(@rules) {
    #oui > .responsive(@oui-responsive-breakpoint-medium, @rules);
  }

  // Responsive - Min width
  .desktop(@rules) {
    @media screen and (min-width: @oui-responsive-breakpoint-tablet) {
      @rules();
    }
  }

  // Thumbnail
  .thumbnail-base(
    @border-color: @oui-thumbnail-border-color,
    @background: @oui-thumbnail-background,
    @border-size: @oui-thumbnail-border-size,
    @padding: @oui-thumbnail-padding
  ) {
    padding: @padding;
    border: @border-size solid @border-color;
    border-radius: @oui-global-base-radius-medium;
    background: @background;
    cursor: pointer;
  }

  .thumbnail-base-color(
    @border-hover-color: @oui-thumbnail-border-hover-color,
    @background: @oui-thumbnail-background,
    @border-size: @oui-thumbnail-border-size
  ) {
    border: @border-size solid @border-hover-color;
    background: @background;
  }

  .thumbnail-light-color(
    @border-hover-color: @oui-thumbnail-border-hover-color,
    @background: @oui-thumbnail-background-light,
    @border-size: @oui-thumbnail-border-size
  ) {
    border: @border-size solid @border-hover-color;
    background: @background;
  }

  // Typography
  .base-font() {
    font-family: @oui-global-base-font-family;
    line-height: @oui-global-base-line-height;
    letter-spacing: @oui-global-base-letter-spacing;
    text-align: left;
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    text-rendering: optimizeLegibility;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
  }

  .text-ellipsis() {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  }

  .headings(@index: length(@oui-heading-font-sizes)) when(@index > 0) {
    #oui > .headings(@index - 1);

    &@{index} {
      #oui > .base-font();

      font-size: extract(@oui-heading-font-sizes, @index);
      font-weight: extract(@oui-heading-font-weights, @index);
      margin: extract(@oui-heading-margins, @index);
      color: inherit;
    }
  }

  .link(
    @font-color: @oui-link-font-color,
    @font-color_hover: @oui-link-font-color_hover,
    @text-decoration: @oui-link-text-decoration,
    @text-decoration_hover: @oui-link-text-decoration_hover
  ) {
    .base-font();

    padding: 0;
    border: 0 none;
    background-color: transparent;
    color: @font-color;
    text-decoration: @text-decoration;
    line-height: inherit;
    cursor: pointer;
    -webkit-text-decoration-skip: objects;

    &:active,
    &:hover {
      outline-width: 0;
    }

    &:hover,
    &:focus {
      color: @font-color_hover;
    }

    &:hover {
      text-decoration: @text-decoration_hover;
    }

    img {
      border-style: none;
    }
  }
}
